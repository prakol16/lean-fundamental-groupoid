/-
Copyright (c) 2021 Praneeth Kolichala. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Praneeth Kolichala
-/
import data.equiv.basic
import data.quot

/-!
# Quotient of pi type
This file shows that the product of a family of quotient types
is equivalent to the quotient of the product type. The equivalence
relies on the axiom of choice.
-/

noncomputable theory
/--
  - The equivalence between Π i, (α i)/~ and (Π i, (α i))/~
  where the relation ~ on the product is the one induced
  by each factor (i.e. defined in pi_setoid)
-/
def pi_quotient_equiv_quotient_pi
  {ι : Type*} {α : ι → Type*} [S : ∀ i, setoid (α i)] :
  (Π i, quotient (S i)) ≃ @quotient (Π i, α i) _ :=
{ to_fun := quotient.choice,
  inv_fun := quotient.lift (λ x : Π i, α i, λ i, ⟦x i⟧)
  begin
    intros x y h,
    ext i,
    simp only [quotient.eq],
    apply h,
  end,
  left_inv :=
  begin
    intro x,
    apply quotient.induction_on_pi x,
    simp,
  end,
  right_inv :=
  begin
    intro x,
    apply quotient.induction_on x,
    simp only [quotient.choice_eq, quotient.lift_mk],
    exact congr_fun rfl,
  end }

